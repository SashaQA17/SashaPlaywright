name: Manual tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: first_tests
        type: choice
        options:
          - first_tests
          - second_tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # download-history:
  #   # if: false
  #   runs-on: ubuntu-latest
  #   name: Download history
  #   steps:
  #     - name: setup Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.12"
  #     - run: >
  #         ARTIFACT_ID=$(curl -L 
  #         -H "Accept: application/vnd.github+json" 
  #         -H "X-GitHub-Api-Version: 2022-11-28" 
  #         "https://api.github.com/repos/SashaQA17/SashaPlaywright/actions/artifacts?name=allure-results" 
  #         | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
  #         &&
  #         curl -L 
  #         -H "Accept: application/vnd.github+json" 
  #         -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
  #         -H "X-GitHub-Api-Version: 2022-11-28" 
  #         https://api.github.com/repos/SashaQA17/SashaPlaywright/actions/artifacts/$ARTIFACT_ID/zip 
  #         -o artifacts.zip &&
  #         REPORT_ID=$(curl -L 
  #         -H "Accept: application/vnd.github+json" 
  #         -H "X-GitHub-Api-Version: 2022-11-28" 
  #         "https://api.github.com/repos/SashaQA17/SashaPlaywright/actions/artifacts?name=github-pages" 
  #         | python -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id']);") 
  #         &&
  #         curl -L 
  #         -H "Accept: application/vnd.github+json" 
  #         -H "Authorization: Bearer ${{ secrets.TOKEN }}" 
  #         -H "X-GitHub-Api-Version: 2022-11-28" 
  #         https://api.github.com/repos/SashaQA17/SashaPlaywright/actions/artifacts/$REPORT_ID/zip 
  #         -o pages.zip
  #     - run: mkdir allure-results && unzip artifacts.zip -d allure-results
  #     - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
  #     - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
  #     - name: Store allure history
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: allure-results
  #         path:
  #           allure-results
  #         retention-days: 1


  tests:
    runs-on: ubuntu-latest
    #needs: download-history

    steps:
      - name: checkout repository
        uses: actions/checkout@v3
      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: ensure browsers are installed
        run: python -m playwright install
      - name: first_tests
        if: "github.event.inputs.deployment_target == 'first_tests'"
        run: pytest -v tests/test_main_page.py --alluredir=allure_results
        continue-on-error: true
      - name: second_tests
        if: "github.event.inputs.deployment_target == 'second_tests'"
        run: pytest -v --browser=firefox tests/test_main_page.py --alluredir=allure_results
        continue-on-error: true
      - name: store allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure_results
          path:
            allure_results
          retention-days: 1

  generate-reports:
    runs-on: ubuntu-latest
    needs: tests
    name: generate reports
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.tgz && sudo tar -zxvf allure-2.23.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.23.1/bin/allure /usr/bin/allure
      - name: download all workflow run artifacts
        uses: actions/download-artifact@v3
      - run: allure generate -c allure_results -o _site
      - name: store generated report
        uses: actions/upload-artifact@v3
        with:
          name: _site
          path:
            _site
          retention-days: 1

  publish-reports:
    runs-on: ubuntu-latest
    needs: generate-reports
    name: report publication
    steps:
      - name: download all workflow run artifacts
        uses: actions/download-artifact@v3
      - name: upload Pages artifact
        uses: actions/upload-pages-artifact@v2
      - name: deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.9
